.. _flashfirmware:

========================
Build and flash firmware
========================

micro:bit V1
============

This applies to MicroPython for the micro:bit V1, the source of which can be 
found here: `bbcmicrobit/micropython <https://github.com/bbcmicrobit/micropython>`_.

Dependencies
------------
- `yotta <http://docs.yottabuild.org//>`_

When installing `yotta <http://docs.yottabuild.org>`_, make sure you have
these components ticked to install.

- python
- gcc
- cMake
- ninja
- Yotta
- git-scm
- mbed serial driver

The `yotta
<http://docs.yottabuild.org//>`_ tool is used to build MicroPython, but before that takes place
additional files have to be generated by the Makefile in preparation for the 
build, and additional data is added to the hex file after.

Use yotta to build::

  yt target bbc-microbit-classic-gcc@https://github.com/lancaster-university/yotta-target-bbc-microbit-classic-gcc

Run yotta update to fetch remote assets::

  yt up

The yotta tool is used to build MicroPython, but before that takes place
additional files have to be generated by the Makefile in preparation for the 
build, and additional data is added to the hex file after.

Running the ``make all`` command executes the following steps:

- The ``tools/makeversionhdr.py`` script creates the ``microbitversion.h`` file 
  with macros containing build information
- Yotta builds the source and creates a bare hex file with just the firmware
- The ``tools/adduicr.py`` script adds the UICR to the bare hex
- The final hex file is placed in ``build/firmware.hex``
- The user can optionally append a script using ``tools/makecombinedhex.py`` 
  (or other tools)

micro:bit V2
============

This applies to MicroPython for the micro:bit V2, the source of which can be 
found here: `microbit-foundation/micropython-microbit-v2 <https://github.com/microbit-foundation/micropython-microbit-v2>`_.

The repository also contains a history of 
`MicroPython firmware builds <https://github.com/microbit-foundation/micropython-microbit-v2/actions>`_.

This is a port of MicroPython to the micro:bit which uses CODAL as the 
underlying target platform.

After cloning this repository update the submodules::

    $ git submodule update --init

Then build the MicroPython cross-compiler::

    $ make -C lib/micropython/mpy-cross

After setting up, go to the src/ directory and build::

    $ cd src

    $ make

That will build both ``libmicropython.a`` (from source in ``src/codal_port/``) and the 
CODAL app (from source in ``src/codal_app/``). The resulting firmware will be 
``MICROBIT.hex`` in the ``src/`` directory which can be copied to the micro:bit.
